from aiogram import Router
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

from db.psql.enums.enums import Roles
from db.psql.models import User
from middleware import MsgMiddleware, CallbackMiddleware

router = Router()
router.message.middleware(MsgMiddleware(roles=[Roles.ADMIN, Roles.STUDENT]))
router.callback_query.middleware(CallbackMiddleware(roles=[Roles.ADMIN, Roles.STUDENT]))


def get_text(is_admin: bool):
    return f'''
–ü—Ä–∏–≤–µ—Ç! üëã
–Ø –±–æ—Ç, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—â–∏–π –¥–æ—Å—Ç—É–ø –∫ –∫—É—Ä—Å–∞–º –ø–æ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –∫ —Ä–æ–¥–∞–º.

–í –±–æ—Ç–µ –¥–æ—Å—Ç—É–ø–Ω—ã 3 –∫—É—Ä—Å–∞. –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Ö, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ú–æ–∏ –∫—É—Ä—Å—ã üìñ" –∏–ª–∏ –≤–≤–µ–¥—è –∫–æ–º–∞–Ω–¥—É /courses.

{'''–ï—Å–ª–∏ –≤—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä, –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ ‚öôÔ∏è" –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /admin.

–í –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—ã –º–æ–∂–µ—Ç–µ:
‚Äì –í—ã–¥–∞—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∫—É—Ä—Å—É –ø–æ username  
‚Äì –û—Ç–æ–∑–≤–∞—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∫—É—Ä—Å—É  
‚Äì –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –¥–æ—Å—Ç—É–ø–æ–º –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∏—Ö

ü™∂ –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:
–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, –≤–≤–µ–¥–∏—Ç–µ /start ‚Äî —ç—Ç–æ –º–æ–∂–µ—Ç –ø–æ–º–æ—á—å, –µ—Å–ª–∏ –≤—ã –∑–∞—Å—Ç—Ä—è–ª–∏ –≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.''' if is_admin else ''}

{"–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –∫—É—Ä—Å–æ–≤! üíªü§∞üèº" if not is_admin else "–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞–º–∏ –∫ –∫—É—Ä—Å–∞–º! üíª‚öôÔ∏è"}
'''


@router.message(CommandStart())
async def start(message: Message, user: User, state: FSMContext):
    await state.clear()
    buttons = InlineKeyboardBuilder()
    if user.roles == Roles.ADMIN:
        buttons.button(text="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ ‚öôÔ∏è", callback_data="admin_manage")
    buttons.row(InlineKeyboardButton(text="–ú–æ–∏ –∫—É—Ä—Å—ã üìñ", callback_data="courses"))
    markup = buttons.as_markup()
    text = get_text(user.roles == Roles.ADMIN)
    await state.update_data(bt0=text)
    await state.update_data(br0=markup)
    await message.answer(text, reply_markup=markup)
