from aiogram import Router, F
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import CallbackQuery, Message, InlineKeyboardMarkup, InlineKeyboardButton

from db.psql.enums.enums import Roles
from db.psql.service import ReadUserByUsername, run_sql, CreateUser, UpdateUserRoleByUsername

router = Router()

class UserToAdd(StatesGroup):
    username = State()

@router.callback_query(F.data == "add_user")
async def add_user(query: CallbackQuery, state: FSMContext):
    await state.set_state(UserToAdd.username)
    await query.message.edit_text("–í–≤–µ–¥–∏—Ç–µ username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è c @ \n"
                                  "–ü—Ä–∏–º–µ—Ä: @abcd1234")

@router.message(UserToAdd.username)
async def add_user(message: Message, state: FSMContext):
    if message.text[0] != "@":
        await message.answer("–í—ã –≤–≤–µ–ª–∏ –Ω–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ‚ùå\n"
                             "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è c @ \n"
                                  "–ü—Ä–∏–º–µ—Ä: @abcd1234")
        return
    username = message.text[1:]
    user = await run_sql(ReadUserByUsername(username))
    if user is None:
        await run_sql(CreateUser(tg_id=-1, username=username, roles=Roles.STUDENT))
    else:
        await run_sql(UpdateUserRoleByUsername(username, Roles.STUDENT))
    await state.set_state(None)
    await message.answer(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é @{username} —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–Ω –¥–æ—Å—Ç—É–ø –∫ –∫—É—Ä—Å–∞–º ‚úÖ")
    markup = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è üîë", callback_data="add_user")],
        [InlineKeyboardButton(text="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –¥–æ—Å—Ç—É–ø–æ–º –∫ –∫—É—Ä—Å–∞–º üìù", callback_data="list_users")],
        [InlineKeyboardButton(text="‚¨ÖÔ∏è", callback_data="back_0")]
    ])
    text = ("–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å –ø–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ üõ°Ô∏è \n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–∏ÃÜ—Å—Ç–≤–∏–µ: ")
    await state.update_data(bt1=text)
    await state.update_data(br1=markup)
    await message.answer(text, reply_markup=markup)