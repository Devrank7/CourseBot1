from aiogram import Router, F
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton

from db.psql.enums.enums import Roles
from db.psql.service import run_sql, ReadUsersByRole, ReadUserByUsername
from keyboards.keyboards import ListKeyboardMarkup

router = Router()

@router.callback_query(F.data == "list_users")
async def list_users(query: CallbackQuery, state: FSMContext):
    users = await run_sql(ReadUsersByRole([Roles.STUDENT]))
    markup = ListKeyboardMarkup(users, lambda user: f"@{user.username}", lambda user: user.username, "user_", True, 1).as_keyboard_markup()
    text = ("–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –¥–æ—Å—Ç—É–ø–æ–º –∫ –∫—É—Ä—Å–∞–º üßæ\n"
            "–ù–∞–∂–∞–≤ –Ω–∞ –Ω—É–∂–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º –∏ –∑–∞–∫—Ä—ã—Ç—å –µ–≥–æ –¥–æ—Å—Ç—É–ø –∫ –∫—É—Ä—Å–∞–º")
    await state.update_data(bt2=text)
    await state.update_data(br2=markup)
    await query.message.edit_text(text, reply_markup=markup)

@router.callback_query(F.data.startswith("user_"))
async def user_info(query: CallbackQuery, state: FSMContext):
    username = query.data.split("_")[1]
    user = await run_sql(ReadUserByUsername(username))
    if user is None:
        await query.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–∏ÃÜ–¥–µ–Ω ‚ö†Ô∏è", show_alert=True)
        return
    text = f'''–ò–º—è: {user.first_name}\n
               –§–∞–º–∏–ª–∏—è: {user.last_name}\n
               Username: @{user.username}\n
               {f"ID: {user.tg_id}\n" if user.tg_id != -1 else ""}
            '''
    markup = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ó–∞–∫—Ä—ã—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∫—É—Ä—Å–∞–º üö´", callback_data=f"delete_user_{user.username}")],
        [InlineKeyboardButton(text="üîô", callback_data="back_2")]
    ])
    await state.update_data(bt3=text)
    await state.update_data(br3=markup)
    await query.message.edit_text(text, reply_markup=markup)